@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<BlogProjectMVC.Models.Blog>
@inject BlogProjectMVC.Services.IImageService _imageService

@{
    ViewData["Title"] = "Index";
}
<div class="container">
    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <div class="row gy-3 d-flex justify-content-center">

        @foreach (var blog in Model)
        {
            <div class="col-md-3 col-sm-6 ">
                <div class="card h-100">
                    <img src="@_imageService.ConvertByteArrayToFile(blog.ImageData, blog.ImageType)" class="card-img-top" alt="Cover image">
                    <div class="card-body">
                        <hr />
                        <h5 class="card-title">@blog.Title</h5>
                        <hr />
                        <p class="card-text fs-6 lead">@blog.Description.</p>
                    </div>
                    <div class="p-2">
                        <a asp-controller="Posts" asp-action="PostsBlog" asp-route-id="@blog.Id" class="btn btn-primary btn-sm rounded mb-3">See posts</a>
                    </div>

                </div>
            </div>
        }

    </div>
    <!--Paging controls-->
    <div class="row mt-5">
        <div class="col fs-6 lead">
            Page @(Model.PageCount < Model.PageNumber ? 0: Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchIndex = ViewData["SearchIndex"]}),
             new PagedListRenderOptionsBase
             {
                 LiElementClasses = new string[] { "page-item" },
                 PageClasses = new string[] { "page-link" }
             })
        </div>
    </div>


</div>